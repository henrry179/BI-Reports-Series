---
description: 开发进度时间表更新
globs: 
alwaysApply: false
---
# Cursor 开发流程规则 (v3.0 - 古典音乐音频提醒系统)

## 🕐 实时时间记录原则
- **每次开发更新必须使用当前实时日期和时间**，格式严格为 `YYYY-MM-DD HH:MM:SS`
- **时间获取方式**: 使用当前系统的实时时间，不得使用预设或估算时间
- **记录内容包括**: 优化的模块名称、具体改进点、技术难点、性能指标

## 📋 核心开发流程

### 1. 实时进度记录要求 ⏰
- 每次优化任何模块功能，都必须将优化进度详细更新到 `README.md` 文档中
- 记录格式: 严格使用 `YYYY-MM-DD HH:MM:SS` 格式（24小时制）

### 2. 文档同步推送流程 🚀
- 每次将优化进度更新到 `README.md` 后，必须立即推送到 GitHub 仓库
- 标准操作流程:
  ```bash
  git add .
  git commit -m "更新README，记录[模块名称]优化进度 - $(date '+%Y-%m-%d %H:%M:%S')"
  git push
  ```
- 提交信息规范: 必须包含优化的模块名称和当前时间戳

### 3. 持续迭代检查机制 🔄
- 每次推送到 GitHub 后，需重新检查项目的其他文件和模块功能
- 审查 `README.md` 的"开发进度"板块，明确剩余开发任务优先级
- 检查代码目录和模块，识别未完成、可优化的部分

### 4. 古典音乐音频提醒系统 🎼
- **每次自动完成进度任务后，必须使用古典音乐音频提醒通知用户任务已更新完成**
- **分级音乐提醒策略**:

#### 🎵 贝多芬交响乐 - 重大里程碑提醒
**适用场景**: 项目重大功能完成、架构升级、版本发布
```bash
# macOS系统 - 贝多芬第九交响曲"欢乐颂"片段
afplay /System/Library/Sounds/Sosumi.aiff &
say "重大功能开发完成！如贝多芬交响乐般磅礴，请回来验收这项伟大的成就！" --voice="Ting-Ting"

# 备用方案：播放系统音效并语音提醒
osascript -e 'display notification "🎼 重大里程碑达成！" with title "贝多芬交响乐级成就"'
```

#### 🎹 肖邦音乐 - 代码优化提醒  
**适用场景**: 代码重构、性能优化、算法改进、bug修复
```bash
# macOS系统 - 肖邦夜曲风格的温柔提醒
afplay /System/Library/Sounds/Crystal.aiff &
say "代码优化完成，如肖邦夜曲般优雅精致，请回来欣赏这优美的改进！" --voice="Mei-Jia"

# 备用方案：多音调提醒
for i in {1..3}; do
    afplay /System/Library/Sounds/Tink.aiff &
    sleep 0.5
done
```

#### 🎼 莫扎特轻音乐 - 日常进度提醒
**适用场景**: 文档更新、配置修改、测试完成、日常提交
```bash
# macOS系统 - 莫扎特小夜曲风格的轻快提醒
afplay /System/Library/Sounds/Pop.aiff &
say "日常任务完成，如莫扎特小夜曲般轻松愉快，请回来查看进度更新！" --voice="Sin-ji"

# 备用方案：轻快的连续音效
afplay /System/Library/Sounds/Blow.aiff
```

#### 🔧 跨平台古典音乐提醒实现

**Linux系统适配**:
```bash
# 贝多芬交响乐级提醒
paplay /usr/share/sounds/alsa/Front_Center.wav 2>/dev/null &
espeak "Major milestone achieved like Beethoven's symphony! Please come back to check." --speed=150 2>/dev/null

# 肖邦优化提醒  
for i in {1..3}; do paplay /usr/share/sounds/alsa/Side_Left.wav 2>/dev/null & sleep 0.3; done
espeak "Code optimization completed with Chopin's elegance!" --speed=140 2>/dev/null

# 莫扎特日常提醒
paplay /usr/share/sounds/alsa/Front_Right.wav 2>/dev/null &
espeak "Daily task completed like Mozart's light music!" --speed=130 2>/dev/null
```

**Windows系统适配**:
```powershell
# 贝多芬交响乐级提醒
powershell -Command "
[console]::beep(523,400); [console]::beep(659,400); [console]::beep(784,600);
Add-Type -AssemblyName System.Speech; 
(New-Object System.Speech.Synthesis.SpeechSynthesizer).Speak('Major milestone achieved like Beethoven symphony')
"

# 肖邦优化提醒
powershell -Command "
[console]::beep(440,300); [console]::beep(494,300); [console]::beep(523,300);
(New-Object System.Speech.Synthesis.SpeechSynthesizer).Speak('Code optimization completed with Chopin elegance')
"

# 莫扎特日常提醒  
powershell -Command "
[console]::beep(392,200); [console]::beep(440,200);
(New-Object System.Speech.Synthesis.SpeechSynthesizer).Speak('Daily task completed like Mozart light music')
"
```

#### 🎭 智能音乐提醒策略
- **工作时间(9:00-18:00)**: 使用轻柔版本的古典音乐提醒
- **专注时间**: 降低音量，使用简化版音效
- **深夜模式(22:00-8:00)**: 仅使用文字通知，禁用音频
- **连续任务**: 延迟10秒播放，避免音乐重叠
- **任务类型自动识别**: 根据git commit信息自动选择对应的音乐类型

#### 🎼 音乐提醒触发条件映射
| 任务类型 | 触发条件 | 音乐类型 | 提醒强度 |
|---------|----------|----------|----------|
| 重大功能开发 | 新功能模块完成 | 贝多芬交响乐 | 强 |
| 架构优化 | 系统架构改进 | 贝多芬交响乐 | 强 |
| 版本发布 | 版本标签推送 | 贝多芬交响乐 | 强 |
| 代码重构 | 重构相关commit | 肖邦音乐 | 中 |
| 性能优化 | 性能提升相关 | 肖邦音乐 | 中 |
| Bug修复 | 修复相关commit | 肖邦音乐 | 中 |
| 文档更新 | README/文档修改 | 莫扎特轻音乐 | 轻 |
| 配置调整 | 配置文件修改 | 莫扎特轻音乐 | 轻 |
| 测试完成 | 测试相关操作 | 莫扎特轻音乐 | 轻 |

## 📋 开发检查清单
在每次开发迭代后，请确认以下检查项：
- [ ] 使用实时系统时间记录开发进度（格式: YYYY-MM-DD HH:MM:S）
- [ ] 在README.md中详细记录优化内容和量化指标
- [ ] 执行完整的git提交流程（add → commit → push）
- [ ] 提交信息包含模块名称和时间戳
- [ ] 验证远程仓库已成功更新
- [ ] **根据任务类型播放对应的古典音乐提醒**
- [ ] 检查其他模块是否需要相应调整
- [ ] 确认代码质量和测试覆盖率
- [ ] 更新相关文档和API说明
- [ ] 规划下一个开发目标和优先级
- [ ] 确认古典音乐提醒系统正常工作

## 🛠 自动化古典音乐提醒脚本
```bash
#!/bin/bash
# 智能古典音乐提醒脚本

# 获取当前时间和提交信息
CURRENT_TIME=$(date '+%Y-%m-%d %H:%M:%S')
COMMIT_MSG="$1"

# 判断任务类型并选择对应音乐
play_classical_reminder() {
    local task_type="$1"
    local hour=$(date +%H)
    
    # 深夜模式检查
    if [[ $hour -ge 22 || $hour -le 8 ]]; then
        echo "🌙 深夜模式：任务完成，已静默通知"
        return
    fi
    
    case "$task_type" in
        "beethoven")
            echo "🎼 播放贝多芬交响乐级提醒..."
            if [[ "$OSTYPE" == "darwin"* ]]; then
                afplay /System/Library/Sounds/Sosumi.aiff &
                say "重大功能开发完成！如贝多芬交响乐般磅礴！" --voice="Ting-Ting"
            fi
            ;;
        "chopin")
            echo "🎹 播放肖邦音乐级提醒..."
            if [[ "$OSTYPE" == "darwin"* ]]; then
                afplay /System/Library/Sounds/Crystal.aiff &
                say "代码优化完成，如肖邦夜曲般优雅！" --voice="Mei-Jia"
            fi
            ;;
        "mozart")
            echo "🎼 播放莫扎特轻音乐级提醒..."
            if [[ "$OSTYPE" == "darwin"* ]]; then
                afplay /System/Library/Sounds/Pop.aiff &
                say "日常任务完成，如莫扎特小夜曲般轻快！" --voice="Sin-ji"
            fi
            ;;
    esac
}

# 根据提交信息自动判断任务类型
if [[ "$COMMIT_MSG" =~ (新功能|重大|架构|发布|版本) ]]; then
    MUSIC_TYPE="beethoven"
elif [[ "$COMMIT_MSG" =~ (优化|重构|修复|性能|算法) ]]; then
    MUSIC_TYPE="chopin"
else
    MUSIC_TYPE="mozart"
fi

# 执行git操作
git add .
git commit -m "${COMMIT_MSG} - ${CURRENT_TIME}"
git push

# 播放对应的古典音乐提醒
play_classical_reminder "$MUSIC_TYPE"

echo "✅ 开发进度已更新并推送，${MUSIC_TYPE}音乐提醒已播放"
```

## 🎵 古典音乐知识小贴士
- **贝多芬**: 代表力量与突破，适合庆祝重大成就
- **肖邦**: 代表优雅与精致，适合欣赏代码之美  
- **莫扎特**: 代表轻松与和谐，适合日常愉快工作

---
**最后更新时间**: 2025-01-13 17:25:30  
**规则版本**: v3.0 - 古典音乐音频提醒系统 